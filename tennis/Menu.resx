<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>